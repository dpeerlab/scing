# include the default configurations
include required(classpath("application"))

backend {
  default = singularity
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        submit = """
        bsub -J ${job_name} \
        -cwd ${cwd} \
        -o ${out} \
        -e ${err} \
        -n ${cpu} \
        /usr/bin/env bash ${script}
        """
        kill = "bkill ${job_id}"
        check-alive = "bjobs ${job_id}"
        job-id-regex = "Job <(\\d+)>.*"
        runtime-attributes = """
        Int cpu = 1
        String? docker
        """
        submit-docker = """
          echo "submitting job to LSF..."
          module load singularity/3.7.1
          if [ -z $SINGULARITY_CACHEDIR ]; 
              then CACHE_DIR=$HOME/.singularity/cache
              else CACHE_DIR=$SINGULARITY_CACHEDIR
          fi
          SINGULARITY_DISABLE_CACHE=false

          # Make sure cache dir exists so lock file can be created by flock
          mkdir -p $CACHE_DIR  
          LOCK_FILE=$CACHE_DIR/singularity_pull_flock

          # cache container and lock cache during pull
          echo "pulling ${docker} ..."
          flock --exclusive --timeout 900 $LOCK_FILE \
            singularity exec \
            --containall \
            docker://${docker} \
            echo "successfully pulled ${docker}"

          # Submit the script to LSF
          #--bind ${cwd}:${docker_cwd} \
          bsub -J ${job_name} \
          -cwd ${cwd} \
          -o ${out} \
          -e ${err} \
          -n ${cpu} \
          singularity exec \
            --containall \
            --bind ${cwd}:${docker_cwd} \
            --bind /lila/data/sail/isabl/datalake/prod/010:/data/sail/isabl/datalake/prod/010 \
            docker://${docker} \
            ${job_shell} \
            ${docker_script}
          """
      }
    }
    singularity {
      # The backend custom configuration.
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      config {
        run-in-background = true
        runtime-attributes = """
          String? docker
        """
        submit-docker = """
          echo "submitting job to singularity..."
          module load singularity/3.7.1
          if [ -z $SINGULARITY_CACHEDIR ]; 
              then CACHE_DIR=$HOME/.singularity/cache
              else CACHE_DIR=$SINGULARITY_CACHEDIR
          fi
          SINGULARITY_DISABLE_CACHE=false

          # Make sure cache dir exists so lock file can be created by flock
          mkdir -p $CACHE_DIR  
          LOCK_FILE=$CACHE_DIR/singularity_pull_flock

          # get sail docker password for docker.io/sailmskcc (accessible by isabl-sailadmins)
          docker_pw=$(cat /data/sail/isabl/tools/.keys/.docker_pw_sail)
          export SINGULARITY_DOCKER_USERNAME=sailmskcc
          export SINGULARITY_DOCKER_PASSWORD=$docker_pw
          export DATALAKE_PATH=/data/sail/isabl/datalake/prod/010

          # cache container and lock cache during pull
          echo "pulling ${docker} ..."
          flock --exclusive --timeout 900 $LOCK_FILE \
            singularity exec \
            --containall \
            docker://${docker} \
            echo "successfully pulled ${docker}"

          echo "submitting job to singularity..."
          # submit job to LSF
          #--bind ${cwd}:${docker_cwd} \
          singularity exec \
            --containall \
            --bind ${cwd}:${docker_cwd} \
            --bind /lila$DATALAKE_PATH:$DATALAKE_PATH \
            docker://${docker} \
            ${job_shell} \
            ${docker_script}
        """
      }
    }
  }
}